
<%- include ("partials/header.ejs") %>
<%- include ("partials/navbar.ejs") %>


<body style='background: url(images/gray.jpg) no-repeat center;' class="text-center">
  <h1 style="padding-bottom : 5px" class="etc"><%= info[0] %> Course Search </h1>     
</body>


<html>
<head>

    <!-- CSS only -->
    
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">

    <!-- JS, Popper.js, and jQuery -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV" crossorigin="anonymous"></script>


    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

</head>


<body>
  
  <div id=searchBar>
    <form class="search_bar" action="/<%=className%>" method="POST">
      <label for="search"></label>
      <input type="text" placeholder="Search.." id="search" name="search">
      <button type="submit" id="search_submit_button"><i class="fa fa-search"></i></button>
    </form> 
    <div id="showErrorMessage"></div>
  </div>

  
 
  <div id=displayLoginEmail></div>
  
  
    <button id="signout_button" href="#" onclick="signOut();">Sign out</a>

  <!--Add buttons to initiate auth sequence and sign out-->
    <button id="authorize_button">Sign in</button>
    

  <!--File Results displayed here-->
  <% if (search_term) { %>
    <p1 style="text-align: center;" id="p1" value=<%=search_term%>> </p1>
  <% } %>
  <a id="content">  </a> 

</body>
<%- include ("partials/footer.ejs") %>
</body>





<script>
// google sign-in function  
function showEmail(email) {
  document.querySelector('#displayLoginEmail').innerHTML=email;  
}
function showErrorMessage(message) {
  document.querySelector('#showErrorMessage').innerHTML=message;  
}
function allowFormSubmit(isDisabled) {
  document.getElementById("search").disabled = isDisabled;
  document.getElementById("search_submit_button").disabled = isDisabled;
}

  // google sign-out function
function signOut() {
  var auth2 = gapi.auth2.getAuthInstance();
  auth2.signOut().then(function () {
    console.log('User signed out.');
  });
  window.location.reload();
}
</script>

<script type="text/javascript">
  var search_term = "<%= search_term  %>"
  // Client ID and API key from the Developer Console
  var CLIENT_ID = '400753858523-t9tqo0rfmta16btr8cc2bt8c76mfukfh.apps.googleusercontent.com';
  var API_KEY = 'AIzaSyDLOA3h35cmJ5y7qUdLxilt4Opj1NmIPyc';

  // Array of API discovery doc URLs for APIs used by the quickstart
  var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/drive/v3/rest"];

  // Authorization scopes required by the API; multiple scopes can be
  // included, separated by spaces.
  var SCOPES = 'https://www.googleapis.com/auth/drive.metadata.readonly';

  var authorizeButton = document.getElementById('authorize_button');
  var signoutButton = document.getElementById('signout_button');
  
  var files;

  /**
   *  On load, called to load the auth2 library and API client library.
   */
  function handleClientLoad() {
      gapi.load('client:auth2', initClient);
  }

  /**
   *  Initializes the API client library and sets up sign-in state
   *  listeners.
   */
  function initClient() {
        gapi.client.init({
          apiKey: API_KEY,
          clientId: CLIENT_ID,
          discoveryDocs: DISCOVERY_DOCS,
          scope: SCOPES
        })
        .then(() => {
          gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);

          // Handle the initial sign-in state.
          updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());

          authorizeButton.onclick = handleAuthClick;
          signoutButton.onclick = handleSignoutClick;
        })
      }

  /**
   *  Called when the signed in status changes, to update the UI
   *  appropriately. After a sign-in, the API is called.
   */
  function updateSigninStatus(isSignedIn) {
    console.log({ isSignedIn })
    if (isSignedIn) {
      var email = gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getEmail()
      authorizeButton.style.display = 'none';
      signoutButton.style.display = 'block';
      showEmail(email)
      showErrorMessage("")
      allowFormSubmit(false)
      listFiles();
    } else {
      authorizeButton.style.display = 'block';
      signoutButton.style.display = 'none';
      showErrorMessage("You need be logged in to search")
      allowFormSubmit(true)
      showEmail("")
    }
  }

  /**
   *  Sign in the user upon button click.
   */
  function handleAuthClick(event) {
    gapi.auth2.getAuthInstance().signIn();
  }

  /**
   *  Sign out the user upon button click.
   */
  function handleSignoutClick(event) {
    gapi.auth2.getAuthInstance().signOut();
    refresh();    
  }
  

  /**
   * Append a pre element to the body containing the given message
   * as its text node. Used to display the results of the API call.
   *
   * @param {string} message Text to be placed in pre element.
   */
  function appendPre(message) {
    var pre = document.getElementById('content');
    var textContent = document.createTextNode(message + '\n');
    pre.appendChild(textContent);
    
  }

  /**
   * Print files.
   */
  function listFiles() {
    const t = document.getElementById('p1');
    const terms = t.getAttribute('value');
    const searchInFileID = '1ZtGODBQ9XVYusZNiwMc9v1j9veKglTMY';
    gapi.client.drive.files.list({
      q: "fullText Contains '"+terms+"' and parents in '"+searchInFileID+"'",
      'pageSize': 10,
      'fields': "nextPageToken, files(id, name, iconLink)" 
    }).then(function(response) {
      appendPre('');
      files = response.result.files;
      if (files && files.length > 0) {
        for (var i = 0; i < files.length; i++) {
          var file = files[i];
          var fileName = file.name; 
          var icon = file.iconLink;
          console.log("file name: " +fileName);
          var iconImg = createImg(icon);
          var linkUrl= createUrl(file.id, fileName);
          var fullResult = fileName + linkUrl;
          const pre = document.querySelector('#content');
          
          pre.append(iconImg);
          pre.append(linkUrl);
          
      
          
          
          }
      } else {
        appendPre('No files found.');
      }
    });
  }


  function createUrl(id,fileName) {

    //  need to add page number ex: #page=10
    const aTag = document.createElement('a');
    const url = `https://drive.google.com/file/d/${id}/view?usp=sharing"`;
    

    aTag.className = "contentLinks";
    aTag.style = "white-space: pre-wrap;";

    //changes link to filename instead of actual URL
    aTag.textContent = fileName;
    
    aTag.href = url;
    aTag.append("\n\n");
    
    return aTag;
  }
  function createImg(icon) {

    const imgTag = document.createElement('img');
    imgTag.style = "white-space: pre-wrap; width: 100; height: 100; padding: 10px";
    imgTag.src = icon;
    
    return imgTag;
    }

function changeBackground(color) {
document.body.style.backgroundImage = color;
}
function refresh() {    
  setTimeout(function () {
      location.reload()
  }, 100);
}

</script>

<script async defer src="https://apis.google.com/js/api.js"
 onreadystatechange="if (this.readyState === 'complete') this.onload()"
 onload="this.onload=function(){};handleClientLoad()"
>
</script>


</html>







